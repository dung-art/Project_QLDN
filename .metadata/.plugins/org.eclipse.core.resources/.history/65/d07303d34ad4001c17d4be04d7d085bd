package com.WebOfNVD.User.Ctrl;



import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;

import com.WebOfNVD.Common.Response.CreateSuccessResponse;
import com.WebOfNVD.Common.Response.SuccessResponse;
import com.WebOfNVD.User.Dto.CustomerUser.CreateCustomUserRequest;
import com.WebOfNVD.User.Dto.CustomerUser.CustomUserDto;
import com.WebOfNVD.User.Dto.CustomerUser.ListCustomUserCode;
//import com.WebOfNVD.User.Entity.CustomUser;
//import com.WebOfNVD.User.Repo.CustomUserRepo;
import com.WebOfNVD.User.Service.CustomUserService;
//import com.googlecode.jmapper.JMapper;

@RestController
@RequestMapping("/api/v1/users/customer-user")
@Validated
@Transactional
public class CustomerUserCtrl {
//@Autowired
//private CustomUserRepo customUserRepo;
@Autowired
private CustomUserService customUserService;

//private JMapper<CustomUserDto, CustomUser> mapper = new JMapper<>(CustomUserDto.class, CustomUser.class);
//private JMapper<CustomUser, CreateCustomUserRequest> cMapper= new JMapper<>(CustomUser.class, CreateCustomUserRequest.class);

@PostMapping
@ResponseStatus(HttpStatus.OK)
public CreateSuccessResponse create(@RequestBody CreateCustomUserRequest request) {
	CustomUserDto cud = customUserService.create(request);
	return new CreateSuccessResponse(cud.getCustomUserCode());	
}
@GetMapping("/all-partner-user")
@ResponseBody
public List<CustomUserDto> findAllCustomUser(){
	return customUserService.findAllCustomUser();
}
@PostMapping("/delete-partner-user")
@ResponseStatus(HttpStatus.OK)
public SuccessResponse softDeleteCustomUser(@RequestBody ListCustomUserCode customUserCodes){
	return customUserService.softDeleteCustomUser(customUserCodes);
}
}
