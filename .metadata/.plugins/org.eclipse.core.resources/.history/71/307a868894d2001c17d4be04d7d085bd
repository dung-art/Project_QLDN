package com.WebOfNVD.User.Ctrl;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;

import com.WebOfNVD.Common.Response.CreateSuccessResponse;
import com.WebOfNVD.Common.Response.SuccessResponse;
import com.WebOfNVD.User.Dto.PartnerUser.CreatePartnerUserRequest;
import com.WebOfNVD.User.Dto.PartnerUser.ListPartnerUserCode;
import com.WebOfNVD.User.Dto.PartnerUser.PartnerUserDto;
import com.WebOfNVD.User.Entity.PartnerUser;
import com.WebOfNVD.User.Repo.PartnerUserRepo;
import com.WebOfNVD.User.Service.PartnerUserService;
import com.googlecode.jmapper.JMapper;

@RestController
@RequestMapping("/api/v1/users/partner-user")
@Validated
@Transactional
public class PartnerUserCtrl {
	@Autowired
	private PartnerUserService partnerUserService;

	@PostMapping
	@ResponseStatus(HttpStatus.OK)
	public CreateSuccessResponse create(@RequestBody CreatePartnerUserRequest request) {
		PartnerUserDto cud = partnerUserService.create(request);
		return new CreateSuccessResponse(cud.getPartnerUserCode());	
	}

	@GetMapping("/all-partner-user")
	@ResponseBody
	public List<PartnerUserDto> findAllPartnerUser(){
		return partnerUserService.findAllPartnerUser();
	}
	@PostMapping("/delete-partner-user")
	@ResponseStatus(HttpStatus.OK)
	public SuccessResponse softDeletePartnerUser(@RequestBody ListPartnerUserCode partnerUserCodes){
		return partnerUserService.softDeletePartnerUser(partnerUserCodes);
	}
}
