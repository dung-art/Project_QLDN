package com.WebOfNVD.User.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.WebOfNVD.Common.Response.FailResponse;
import com.WebOfNVD.Common.Response.SuccessResponse;
import com.WebOfNVD.User.Dto.CreateUserResponse;
import com.WebOfNVD.User.Dto.PartnerUser.CreatePartnerUserRequest;
import com.WebOfNVD.User.Dto.PartnerUser.ListPartnerUserCode;
import com.WebOfNVD.User.Dto.PartnerUser.PartnerUserDto;
import com.WebOfNVD.User.Dto.PartnerUser.UpdatePartnerUserRequest;
import com.WebOfNVD.User.Dto.SystemUser.SystemUserDto;
import com.WebOfNVD.User.Entity.PartnerUser;
import com.WebOfNVD.User.Entity.SystemUser;
import com.WebOfNVD.User.Repo.PartnerUserRepo;
import com.googlecode.jmapper.JMapper;

@Service
@Transactional
public class PartnerUserServiceImpl implements PartnerUserService {
	@Autowired
	PartnerUserRepo partnerUserRepo;

	private JMapper<PartnerUserDto, PartnerUser> mapper = new JMapper<>(PartnerUserDto.class, PartnerUser.class);
	private JMapper<PartnerUser, CreatePartnerUserRequest> cmapper = new JMapper<>(PartnerUser.class,
			CreatePartnerUserRequest.class);

	@Override
	public SuccessResponse create(CreatePartnerUserRequest request) {
		try {
			Optional<PartnerUser> oSystemUser = partnerUserRepo.findById(request.getPartnerUserCode());
			if (oSystemUser.isPresent()) {
				return new FailResponse("Thông tin về người dùng này đã tồn tại !");
			} else {
				PartnerUser systemUser = cmapper.getDestination(request);
				partnerUserRepo.save(systemUser);
				return new CreateUserResponse(systemUser.getPartnerUserCode(),
						"Thêm mới tài khoản người dùng thành công !");
			}
		} catch (Exception e) {
		}
		return new FailResponse("Đã có lỗi xãy ra !");
	}

	@Override
	public List<PartnerUserDto> findAllPartnerUser() {
		List<PartnerUser> partnerUsers = partnerUserRepo.findAllNoDelete();
		if (partnerUsers.isEmpty() || partnerUsers == null) {
			return null;
		}
		List<PartnerUserDto> partnerUserDtos = new ArrayList<>();
		for (PartnerUser partnerUser : partnerUsers) {
			partnerUserDtos.add(mapper.getDestination(partnerUser));
		}
		return partnerUserDtos;
	}

	@Override
	public SuccessResponse softDeletePartnerUser(ListPartnerUserCode partnerUserCodes) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public SuccessResponse updateAllField(String systemUserCode, UpdatePartnerUserRequest request) {
		// TODO Auto-generated method stub
		return null;
	}
}
